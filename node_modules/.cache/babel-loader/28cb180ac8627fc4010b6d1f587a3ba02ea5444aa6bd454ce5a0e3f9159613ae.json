{"ast":null,"code":"export default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      userId: null,\n      fromVisible: false,\n      form: {},\n      userForm: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      content: '',\n      fromVisible1: false\n    };\n  },\n  created() {\n    this.load(1);\n    this.getUser();\n  },\n  methods: {\n    getUser() {\n      this.$request.get('/user/selectAll').then(res => {\n        if (res.code == '200') {\n          this.userForm = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    },\n    changeStatus(row, status) {\n      this.$confirm('您确定操作吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n        this.form.status = status;\n        this.$request.put('/goods/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('保存成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(err => {});\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          userId: this.userId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.name = null;\n      this.userId = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","userId","fromVisible","form","userForm","user","JSON","parse","localStorage","getItem","rules","ids","content","fromVisible1","created","load","getUser","methods","$request","get","then","res","code","$message","error","msg","preview","changeStatus","row","status","$confirm","type","response","stringify","put","success","catch","err","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"search\">\r\n        <el-input placeholder=\"请输入名称查询\" style=\"width: 200px; margin-right: 10px\" v-model=\"name\"></el-input>\r\n        <el-select v-model=\"userId\" placeholder=\"请选择用户名\">\r\n          <el-option  \r\n          v-for=\"item in userForm\"\r\n          :key=\"item.id\"\r\n          :label=\"item.name\"\r\n          :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n  \r\n      <div class=\"operation\">\r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n      </div>\r\n  \r\n      <div class=\"table\">\r\n        <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"img\" label=\"图片\">\r\n            <template v-slot=\"scope\">\r\n              <el-image v-if=\"scope.row.img\" style=\"width: 50px\" :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"name\" label=\"名称\" show-overflow-tooltip></el-table-column>\r\n          <el-table-column prop=\"price\" label=\"价格\"></el-table-column>\r\n          <el-table-column prop=\"content\" label=\"详情\" width=\"100\">\r\n            <template v-slot=\"scope\">\r\n              <el-button type=\"success\" @click=\"preview(scope.row.content)\">显示详情</el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"address\" label=\"发货地址\"></el-table-column>\r\n          <el-table-column prop=\"date\" label=\"上架日期\"></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"审核状态\">\r\n            <template v-slot=\"scope\">\r\n              <el-tag type=\"info\" v-if=\"scope.row.status === '待审核'\">待审核</el-tag>\r\n              <el-tag type=\"primary\" v-if=\"scope.row.status === '通过'\">通过</el-tag>\r\n              <el-tag type=\"danger\" v-if=\"scope.row.status === '拒绝'\">拒绝</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"category\" label=\"分类\"></el-table-column>\r\n          <el-table-column prop=\"userName\" label=\"所属用户\"></el-table-column>\r\n          <el-table-column prop=\"saleStatus\" label=\"上架状态\"></el-table-column>\r\n          <el-table-column prop=\"readCount\" label=\"浏览量\"></el-table-column>\r\n          <el-table-column label=\"操作\" align=\"center\" width=\"240\">\r\n            <template v-slot=\"scope\">\r\n              <el-button size=\"mini\" type=\"primary\" plain @click=\"changeStatus(scope.row, '通过')\">通过</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" plain @click=\"changeStatus(scope.row, '拒绝')\">拒绝</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n              background\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[5, 10, 20]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, prev, pager, next\"\r\n              :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n  \r\n      <el-dialog title=\"内容\" :visible.sync=\"fromVisible1\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <div class=\"w-e-text\">\r\n          <div v-html=\"content\"></div>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n      <el-dialog title=\"二手商品\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n          <el-form-item label=\"图片\" prop=\"img\">\r\n            <el-input v-model=\"form.img\" placeholder=\"图片\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"名称\" prop=\"name\">\r\n            <el-input v-model=\"form.name\" placeholder=\"名称\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"价格\" prop=\"price\">\r\n            <el-input v-model=\"form.price\" placeholder=\"价格\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"详情\" prop=\"content\">\r\n            <el-input v-model=\"form.content\" placeholder=\"详情\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"发货地址\" prop=\"address\">\r\n            <el-input v-model=\"form.address\" placeholder=\"发货地址\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上架日期\" prop=\"date\">\r\n            <el-input v-model=\"form.date\" placeholder=\"上架日期\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"审核状态\" prop=\"status\">\r\n            <el-input v-model=\"form.status\" placeholder=\"审核状态\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"分类\" prop=\"category\">\r\n            <el-input v-model=\"form.category\" placeholder=\"分类\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"所属用户ID\" prop=\"userId\">\r\n            <el-input v-model=\"form.userId\" placeholder=\"所属用户ID\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上架状态\" prop=\"saleStatus\">\r\n            <el-input v-model=\"form.saleStatus\" placeholder=\"上架状态\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"浏览量\" prop=\"readCount\">\r\n            <el-input v-model=\"form.readCount\" placeholder=\"浏览量\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n  \r\n    </div>\r\n  </template>\r\n  <script>\r\n  export default {\r\n    name: \"Goods\",\r\n    data() {\r\n      return {\r\n        tableData: [],  // 所有的数据\r\n        pageNum: 1,   // 当前的页码\r\n        pageSize: 10,  // 每页显示的个数\r\n        total: 0,\r\n        name: null,\r\n        userId: null,\r\n        fromVisible: false,\r\n        form: {},\r\n        userForm:[],\r\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        rules: {\r\n        },\r\n        ids: [],\r\n        content: '',\r\n        fromVisible1: false\r\n      }\r\n    },\r\n    created() {\r\n      this.load(1)\r\n      this.getUser()\r\n    },\r\n    methods: {\r\n      getUser(){\r\n        this.$request.get('/user/selectAll').then(res => {\r\n          if(res.code == '200'){\r\n            this.userForm = res.data\r\n          }else{\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      },\r\n      preview(content) {\r\n        this.content = content\r\n        this.fromVisible1 = true\r\n      },\r\n      changeStatus(row, status) {\r\n        this.$confirm('您确定操作吗？', '确认操作', {type: \"warning\"}).then(response => {\r\n          this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n          this.form.status = status\r\n          this.$request.put('/goods/update', this.form).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(err => {})\r\n      },\r\n      handleAdd() {   // 新增数据\r\n        this.form = {}  // 新增数据的时候清空数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      handleEdit(row) {   // 编辑数据\r\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n        this.$refs.formRef.validate((valid) => {\r\n          if (valid) {\r\n            this.$request({\r\n              url: this.form.id ? '/goods/update' : '/goods/add',\r\n              method: this.form.id ? 'PUT' : 'POST',\r\n              data: this.form\r\n            }).then(res => {\r\n              if (res.code === '200') {  // 表示成功保存\r\n                this.$message.success('保存成功')\r\n                this.load(1)\r\n                this.fromVisible = false\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      del(id) {   // 单个删除\r\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/goods/delete/' + id).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n        this.ids = rows.map(v => v.id)\r\n      },\r\n      delBatch() {   // 批量删除\r\n        if (!this.ids.length) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      load(pageNum) {  // 分页查询\r\n        if (pageNum) this.pageNum = pageNum\r\n        this.$request.get('/goods/selectPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            name: this.name,\r\n            userId: this.userId\r\n          }\r\n        }).then(res => {\r\n          if (res.code === '200') {\r\n            this.tableData = res.data?.list\r\n            this.total = res.data?.total\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      },\r\n      reset() {\r\n        this.name = null\r\n        this.userId = null\r\n        this.load(1)\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        this.load(pageNum)\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}