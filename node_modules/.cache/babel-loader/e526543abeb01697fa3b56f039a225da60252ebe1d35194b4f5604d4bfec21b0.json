{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      lineOption: {\n        title: {\n          text: '商品销售额统计',\n          left: 'center',\n          subtext: '趋势图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'left'\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [],\n          type: 'line',\n          smooth: true\n        }]\n      },\n      barOption: {\n        title: {\n          text: '商家销售额统计',\n          subtext: '柱状图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'left'\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [],\n          type: 'bar',\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: function (params) {\n                // 根据索引返回对应的颜色\n                let colorList = ['#ffaa2e', '#32C5E9', '#fa4c4c', '#08b448', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadLine();\n    this.loadBar();\n  },\n  methods: {\n    //折线图\n    loadLine() {\n      this.$request.get('/echarts/line').then(res => {\n        if (res.code == '200') {\n          let linetDom = document.getElementById('line');\n          let lineChart = echarts.init(linetDom);\n          this.lineOption.xAxis.data = res.data?.map(v => v.name) || [];\n          this.lineOption.series[0].data = res.data?.map(v => v.value) || [];\n          lineChart.setOption(this.lineOption);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadBar() {\n      this.$request.get('/echarts/bar').then(res => {\n        if (res.code == '200') {\n          let barDom = document.getElementById('bar');\n          let barChart = echarts.init(barDom);\n          this.barOption.xAxis.data = res.data?.map(v => v.name) || [];\n          this.barOption.series[0].data = res.data?.map(v => v.value) || [];\n          barChart.setOption(this.barOption);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","notices","lineOption","title","text","left","subtext","tooltip","trigger","legend","xAxis","type","yAxis","series","smooth","barOption","itemStyle","normal","color","params","colorList","dataIndex","created","loadLine","loadBar","methods","$request","get","then","res","code","linetDom","document","getElementById","lineChart","init","map","v","value","setOption","$message","error","msg","barDom","barChart"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <div style=\"display: flex; margin: 10px 0; gap: 10px; align-items: center; justify-items: center\">\n     <div id=\"line\" class=\"card\" style=\"flex: 1; height: 500px;\"></div>\n     <div id=\"bar\" class=\"card\" style=\"flex: 1; height: 500px;\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      lineOption: {\n        title: {\n          text: '商品销售额统计',\n          left: 'center',\n          subtext: '趋势图',\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'left'\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [],\n            type: 'line',\n            smooth: true\n          },\n        ]\n      },\n      barOption: {\n        title: {\n          text: '商家销售额统计',\n          subtext: '柱状图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'left'\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [],\n            type: 'bar',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: function(params) { // 根据索引返回对应的颜色\n                  let colorList = ['#ffaa2e','#32C5E9','#fa4c4c','#08b448','#FFDB5C','#ff9f7f','#fb7293','#E062AE','#E690D1','#e7bcf3']\n                  return colorList[params.dataIndex];\n                }\n              }\n            },\n          }\n        ]\n      },\n\n    }\n  },\n  created() {\n    this.loadLine()\n    this.loadBar()\n  },\n  methods: {\n    //折线图\n    loadLine(){\n      this.$request.get('/echarts/line').then(res => {\n        if(res.code == '200'){\n          let linetDom = document.getElementById('line');\n          let lineChart = echarts.init(linetDom);\n          this.lineOption.xAxis.data = res.data?.map(v => v.name) || []\n          this.lineOption.series[0].data = res.data?.map(v => v.value) || []\n          lineChart.setOption(this.lineOption)\n        }else{\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    loadBar(){\n      this.$request.get('/echarts/bar').then(res => {\n        if(res.code == '200'){\n          let barDom = document.getElementById('bar');\n          let barChart = echarts.init(barDom);\n          this.barOption.xAxis.data = res.data?.map(v => v.name) || []\n          this.barOption.series[0].data = res.data?.map(v => v.value) || []\n          barChart.setOption(this.barOption)\n        }else{\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n"],"mappings":"AAcA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,UAAA;QACAC,KAAA;UACAC,IAAA;UACAC,IAAA;UACAC,OAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAJ,IAAA;QACA;QACAK,KAAA;UACAC,IAAA;UACAhB,IAAA;QACA;QACAiB,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACAlB,IAAA;UACAgB,IAAA;UACAG,MAAA;QACA;MAEA;MACAC,SAAA;QACAZ,KAAA;UACAC,IAAA;UACAE,OAAA;UACAD,IAAA;QACA;QACAE,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAJ,IAAA;QACA;QACAK,KAAA;UACAC,IAAA;UACAhB,IAAA;QACA;QACAiB,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACAlB,IAAA;UACAgB,IAAA;UACAG,MAAA;UACAE,SAAA;YACAC,MAAA;cACAC,KAAA,WAAAA,CAAAC,MAAA;gBAAA;gBACA,IAAAC,SAAA;gBACA,OAAAA,SAAA,CAAAD,MAAA,CAAAE,SAAA;cACA;YACA;UACA;QACA;MAEA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA;IACAF,SAAA;MACA,KAAAG,QAAA,CAAAC,GAAA,kBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;UACA,IAAAC,SAAA,GAAAzC,OAAA,CAAA0C,IAAA,CAAAJ,QAAA;UACA,KAAA7B,UAAA,CAAAQ,KAAA,CAAAf,IAAA,GAAAkC,GAAA,CAAAlC,IAAA,EAAAyC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA3C,IAAA;UACA,KAAAQ,UAAA,CAAAW,MAAA,IAAAlB,IAAA,GAAAkC,GAAA,CAAAlC,IAAA,EAAAyC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,KAAA;UACAJ,SAAA,CAAAK,SAAA,MAAArC,UAAA;QACA;UACA,KAAAsC,QAAA,CAAAC,KAAA,CAAAZ,GAAA,CAAAa,GAAA;QACA;MACA;IACA;IACAlB,QAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,iBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,IAAAa,MAAA,GAAAX,QAAA,CAAAC,cAAA;UACA,IAAAW,QAAA,GAAAnD,OAAA,CAAA0C,IAAA,CAAAQ,MAAA;UACA,KAAA5B,SAAA,CAAAL,KAAA,CAAAf,IAAA,GAAAkC,GAAA,CAAAlC,IAAA,EAAAyC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA3C,IAAA;UACA,KAAAqB,SAAA,CAAAF,MAAA,IAAAlB,IAAA,GAAAkC,GAAA,CAAAlC,IAAA,EAAAyC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,KAAA;UACAM,QAAA,CAAAL,SAAA,MAAAxB,SAAA;QACA;UACA,KAAAyB,QAAA,CAAAC,KAAA,CAAAZ,GAAA,CAAAa,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}