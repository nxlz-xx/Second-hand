{"ast":null,"code":"import E from \"wangeditor\";\nexport default {\n  name: \"AddGoods\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        saleStatus: '上架'\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择商品分类',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入发货地址',\n          trigger: 'blur'\n        }]\n      },\n      editor: null\n    };\n  },\n  mounted() {\n    this.loadCategory();\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      if (this.id) {\n        // 编辑的情况下\n        this.$request.get('/goods/selectById/' + this.id).then(res => {\n          if (res.code == '200') {\n            this.form = res.data || {};\n            this.setRichText(this.form.content);\n          }\n        });\n      } else {\n        this.setRichText('');\n      }\n    },\n    loadCategory() {\n      this.$request.get('/category/selectAll').then(res => {\n        if (res.code == '200') {\n          this.categoryList = res.data || [];\n        }\n      });\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('发布成功');\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    handleImgSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create(); // 创建\n        this.editor.txt.html(html);\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","id","$route","query","user","JSON","parse","localStorage","getItem","categoryList","form","saleStatus","rules","required","message","trigger","price","category","address","editor","mounted","loadCategory","loadGoods","methods","$request","get","then","res","code","setRichText","content","save","$refs","formRef","validate","valid","txt","html","url","method","$message","success","error","msg","handleImgSuccess","response","file","fileList","img","$nextTick","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","create"],"sources":["src/views/front/AddGoods.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 50%; margin: 10px auto\">\r\n    <div style=\"margin-bottom: 10px\">\r\n      <el-button @click=\"$router.back()\"><i class=\"el-icon-back\"></i>返回</el-button>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <el-form :model=\"form\" label-width=\"120px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <div style=\"text-align: center; font-size: 24px; margin: 30px 0\">发布商品</div>\r\n        <el-form-item label=\"商品图片\" prop=\"img\">\r\n          <el-upload\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleImgSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传图片</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"price\">\r\n          <el-input v-model=\"form.price\" placeholder=\"价格\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"category\">\r\n          <el-select v-model=\"form.category\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"发货地址\" prop=\"address\">\r\n          <el-input v-model=\"form.address\" placeholder=\"发货地址\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"上架状态\" prop=\"saleStatus\">\r\n          <el-radio-group v-model=\"form.saleStatus\">\r\n            <el-radio label=\"上架\"></el-radio>\r\n            <el-radio label=\"下架\"></el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"详情\" prop=\"content\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button size=\"medium\" type=\"primary\" @click=\"save\">确认发布</el-button>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\"\r\nexport default {\r\n  name: \"AddGoods\",\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      categoryList: [],\r\n      form: {\r\n        saleStatus: '上架'\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入商品名称', trigger: 'blur' }\r\n        ],\r\n        price: [\r\n          { required: true, message: '请输入商品价格', trigger: 'blur' }\r\n        ],\r\n        category: [\r\n          { required: true, message: '请选择商品分类', trigger: 'blur' }\r\n        ],\r\n        address: [\r\n          { required: true, message: '请输入发货地址', trigger: 'blur' }\r\n        ]\r\n      },\r\n      editor: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadCategory()\r\n    this.loadGoods()\r\n  },\r\n  methods: {\r\n    loadGoods() {\r\n      if (this.id) {   // 编辑的情况下\r\n        this.$request.get('/goods/selectById/' + this.id).then(res => {\r\n            if(res.code == '200'){\r\n                this.form = res.data || {}\r\n                this.setRichText(this.form.content)\r\n            }\r\n          \r\n        })\r\n      } else {\r\n        this.setRichText('')\r\n      }\r\n    },\r\n    loadCategory() {\r\n      this.$request.get('/category/selectAll').then(res => {\r\n        if(res.code == '200'){\r\n            this.categoryList = res.data || []\r\n        }\r\n      })\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.content = this.editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/goods/update' : '/goods/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('发布成功')\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleImgSuccess(response, file, fileList) {\r\n      this.form.img = response.data\r\n    },\r\n    setRichText(html) {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.create()  // 创建\r\n        this.editor.txt.html(html)\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAoDA,OAAAA,CAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,IAAA;QACAC,UAAA;MACA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,QAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,OAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAI,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,SAAArB,EAAA;QAAA;QACA,KAAAuB,QAAA,CAAAC,GAAA,6BAAAxB,EAAA,EAAAyB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAlB,IAAA,GAAAiB,GAAA,CAAA3B,IAAA;YACA,KAAA6B,WAAA,MAAAnB,IAAA,CAAAoB,OAAA;UACA;QAEA;MACA;QACA,KAAAD,WAAA;MACA;IACA;IACAR,aAAA;MACA,KAAAG,QAAA,CAAAC,GAAA,wBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,YAAA,GAAAkB,GAAA,CAAA3B,IAAA;QACA;MACA;IACA;IACA+B,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAzB,IAAA,CAAAoB,OAAA,QAAAX,MAAA,CAAAiB,GAAA,CAAAC,IAAA;UACA,KAAAb,QAAA;YACAc,GAAA,OAAA5B,IAAA,CAAAT,EAAA;YACAsC,MAAA,OAAA7B,IAAA,CAAAT,EAAA;YACAD,IAAA,OAAAU;UACA,GAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAY,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAC,iBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,KAAArC,IAAA,CAAAsC,GAAA,GAAAH,QAAA,CAAA7C,IAAA;IACA;IACA6B,YAAAQ,IAAA;MACA,KAAAY,SAAA;QACA,KAAA9B,MAAA,OAAArB,CAAA;QACA,KAAAqB,MAAA,CAAA+B,MAAA,CAAAC,eAAA,QAAAC,QAAA;QACA,KAAAjC,MAAA,CAAA+B,MAAA,CAAAG,cAAA;QACA,KAAAlC,MAAA,CAAA+B,MAAA,CAAAI,gBAAA;UACAC,KAAA,OAAAnD,IAAA,CAAAmD;QACA;QACA,KAAApC,MAAA,CAAA+B,MAAA,CAAAM,eAAA;UACAC,IAAA;QACA;QACA,KAAAtC,MAAA,CAAAuC,MAAA;QACA,KAAAvC,MAAA,CAAAiB,GAAA,CAAAC,IAAA,CAAAA,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}